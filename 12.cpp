/*
The sequence of triangle numbers is generated by adding the natural numbers. So
the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten
terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred
divisors?

*/

#include <cmath>
#include <iostream>
#include <string>

using namespace std;

#define N 500

int getDivisors(long n) {
  int sum = 0;  // one and number itself
  for (long i = 2; i < (int)sqrt(n); i++) {
    if (n % i == 0) {
      sum += 2;
    }
  }
  return sum;
}

int brute_force() {
  int n = 1;
  int triangle_number = 0;
  int s;
  while (true) {
    triangle_number += n;

    s = getDivisors(triangle_number);
    if (s > N) {
      break;
    }

    if (s > 100) {
      cout << triangle_number << "  " << s << "  " << n << endl;
    }

    n++;
  }

  cout << "RJ: " << triangle_number << "  " << s << "  " << n << endl;
}

int main(void) {
  brute_force();
  return 0;
}